//=============================================================================
//
// ランキング処理 [ranking.cpp]
// Author : GP12A295-19-千坂浩太
//
//=============================================================================
#define _CRT_SECURE_NO_WARNINGS

#include "furniture.h"
#include "field.h"
#include "main.h"
#include "debugproc.h"
#include "stage.h"
#include "load_csv.h"
#include "write_csv.h"
#include "ranking.h"
//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//*****************************************************************************
// 列挙型
//*****************************************************************************
enum
{
	RANKING_CSV_ID = 0,		// ID
	RANKING_CSV_RANK,		// 順位
	RANKING_CSV_SCORE,		// スコア(被害総額)
	RANKING_CSV_MAX,
};

//=============================================================================
// ランキング処理
//=============================================================================
void Ranking(void)
{
	// スコアをもとに3位のスコアと比較し、3位のスコアより低ければランキング更新しない→ランキング表示にスキップ

	// 3位よりスコア高ければランキング更新処理を行う(ソート)
	// 同じ順位が出た場合はIDの新しいほう(後にプレイしたプレイヤー)が高順位になるようにする

	// 最新のランキング用csvファイル作成

	// ランキング表示

}
//=============================================================================
// ランキング用csvファイル読み込み処理
//=============================================================================

//=============================================================================
// ランキング用csvファイル書き込み処理
//=============================================================================

//=============================================================================
// ランキング更新処理(ソート)
//=============================================================================

//=============================================================================
// ランキング表示処理
//=============================================================================
